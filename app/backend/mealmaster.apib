FORMAT: 1A

# Mealmaster API

## Host: http://localhost:4000/

# Group Authentication

## Customer Login [POST /auth/login]

+ Request (application/json)
    + Attributes (object)
        + phone_number: `1234567890` (string, required) - The phone number of the user.
        + password: `password` (string, required) - The password of the user.

+ Response 200 (application/json)
    + Attributes (object)
        + refresh_token: `abcdefghijklmnopqrstuvwxyz` (string) - Refresh token for the user.

## Restaurant Owner Login [POST /auth/restaurant-owner/login]

+ Request (application/json)
    + Attributes (object)
        + email: `email@example.com` (string, required) - The email of the restaurant owner.
        + password: `password` (string, required) - The password of the restaurant owner.

+ Response 200 (application/json)
    + Attributes (object)
        + refresh_token: `abcdefghijklmnopqrstuvwxyz` (string) - Refresh token for the user.

## Refresh Token [POST /auth/refresh]

+ Request (application/json)
    + Attributes (object)
        + refresh_token: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIyMCIsImlhdCI6MTY4ODYyMjg4NSwiZXhwIjoxNjg4NzA5Mjg1fQ.xIJTwlm6ohe5vEsQ9Q95bQ8XZxpZZ3q76ijsGVIVrtc` (string, required) - Refresh token for the user.

+ Response 200 (application/json)
    + Attributes (object)
        + refresh_token: `abcdefghijklmnopqrstuvwxyz` (string) - Refresh token for the user.

# Group Users

## Register [POST /user/register]

+ Request (application/json)
    + Attributes (object)
        + phone_number: `1234567890` (string, required) - The phone number of the user.
        + password: `password` (string, required) - The password of the user.

+ Response 201 (application/json)
    + Attributes (object)
        + message: `Registration successful` (string)
        + user (object)
            + id: `1` (required, number) - The user ID.
            + first_name: `John` (string, optional) - The first name of the user.
            + last_name: `Doe` (string, optional) - The last name of the user.
            + profile_picture: `url` (string, optional) - The profile picture URL of the user.
            + phone_number: `1234567890` (string, optional) - The phone number of the user.
            + email: `email@example.com` (string, optional) - The email of the user.
            + role: `customer` (enum, required) - The role of the user. Members must be one of the following:
                + `customer`
                + `restaurant-owner`

## Register Restaurant Owner [POST /user/restaurant-owner/register]

+ Request (application/json)
    + Attributes (object)
        + email: `email@example.com` (string, required) - The email of the restaurant owner.
        + password: `password` (string, required) - The password of the restaurant owner.

+ Response 201 (application/json)
    + Attributes (object)
        + message: `Restaurant Owner registration successful` (string)
        + user (object)
            + id: `2` (required, number) - The user ID.
            + first_name: `John` (string, optional) - The first name of the user.
            + last_name: `Doe` (string, optional) - The last name of the user.
            + profile_picture: `url` (string, optional) - The profile picture URL of the user.
            + phone_number: `1234567890` (string, optional) - The phone number of the user.
            + email: `email@example.com` (string, optional) - The email of the user.
            + role: `restaurant-owner` (enum, required) - The role of the user. Members must be one of the following:
                + `customer`
                + `restaurant-owner`

## User Profile [/user/{id}/profile]
+ Parameters
    + id: `1` (required, number) - An identifier for the user.

### Get User Profile [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + id: `1` (required, number) - The user ID.
        + first_name: `John` (string, optional) - The first name of the user.
        + last_name: `Doe` (string, optional) - The last name of the user.
        + profile_picture: `url` (string, optional) - The profile picture URL of the user.
        + phone_number: `1234567890` (string, optional) - The phone number of the user.
        + email: `email@example.com` (string, optional) - The email of the user.
        + role: `customer` (enum, required) - The role of the user. Members must be one of the following:
            + `customer`
            + `restaurant-owner`

### Update User Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + first_name: `John` (string, optional) - The first name of the user.
        + last_name: `Doe` (string, optional) - The last name of the user.
        + profile_picture: `url` (string, optional) - The profile picture URL of the user.
        + phone_number: `1234567890` (string, optional) - The phone number of the user.
        + email: `email@example.com` (string, optional) - The email of the user.
        + password: `password` (string, optional) - The password of the user.

+ Response 200 (application/json)
    + Attributes (object)
        + id: `1` (required, number) - The user ID.
        + first_name: `John` (string, optional) - The first name of the user.
        + last_name: `Doe` (string, optional) - The last name of the user.
        + profile_picture: `url` (string, optional) - The profile picture URL of the user.
        + phone_number: `1234567890` (string, optional) - The phone number of the user.
        + email: `email@example.com` (string, optional) - The email of the user.
        + role: `customer` (enum, required) - The role of the user. Members must be one of the following:
            + `customer`
            + `restaurant-owner`
            
# Group Entity

## Restaurant Profile [/restaurant/{id}/profile]
+ Parameters
    + id: `1` (required, number) - An identifier for the restaurant.

### Get Restaurant Profile [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + user_id: `1` (required, number) - The user ID.
        + address_id: `1` (required, number) - The address ID.
        + name: `Example` (string, optional) - The name of the restaurant.
        + logo: `Example.png' (string, optional) - The logo of the restaurant.
        + banner: `Example.png` (string, optional) - The banner of the restaurant.
        + create_at: `2023-01-01T00:00:00.000Z` (string, required) - The date the restaurant created.
        + update_at: `2023-01-01T00:00:00.000Z` (string, required) - The date the restaurant updated.

### Create Restaurant Profile [POST]

+ Request (application/json)
    + Attributes (object)
        + user_id: `1` (required, number) - The user ID.
        + address_id: `1` (required, number) - The address ID.
        + name: `Example` (string, optional) - The name of the restaurant.
        + logo: `Example.png' (string, optional) - The logo of the restaurant.
        + banner: `Example.png` (string, optional) - The banner of the restaurant.

+ Response 200 (application/json)
    + Attributes (object)
        + user_id: `1` (required, number) - The user ID.
        + address_id: `1` (required, number) - The address ID.
        + name: `Example` (string, optional) - The name of the restaurant.
        + logo: `Example.png' (string, optional) - The logo of the restaurant.
        + banner: `Example.png` (string, optional) - The banner of the restaurant.
        + create_at: `2023-01-01T00:00:00.000Z` (string, required) - The date the restaurant created.
        + update_at: `2023-01-01T00:00:00.000Z` (string, required) - The date the restaurant updated.

### Update Restaurant Profile [PUT]
+ Request (application/json)
    + Attributes (object)
        + user_id: `1` (required, number) - The user ID.
        + address_id: `1` (required, number) - The address ID.
        + name: `Example` (string, optional) - The name of the restaurant.
        + logo: `Example.png' (string, optional) - The logo of the restaurant.
        + banner: `Example.png` (string, optional) - The banner of the restaurant.

+ Response 200 (application/json)
    + Attributes (object)
        + user_id: `1` (required, number) - The user ID.
        + address_id: `1` (required, number) - The address ID.
        + name: `Example` (string, optional) - The name of the restaurant.
        + logo: `Example.png' (string, optional) - The logo of the restaurant.
        + banner: `Example.png` (string, optional) - The banner of the restaurant.
        + create_at: `2023-01-01T00:00:00.000Z` (string, required) - The date the restaurant created.
        + update_at: `2023-01-01T00:00:00.000Z` (string, required) - The date the restaurant updated.

## Order Profile [/order/{id}/profile]
+ Parameters
    + id: `1` (required, number) - An identifier for an order.

### Get Order Profile [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + table_id: `1` (required, number) - The table ID.
        + payment_id: `1` (required, number) - The payment ID.
        + user_id: `1` (required, number) - The user ID.
        + current_status: `ready` (string, optional) - The status of the order.
        + total_price: `100` (number, optional) - The price of the order.
        + pickup_type: `1` (number, optional) - `1` for self-pickup, `0` for table service.
        + note: `less salt` (string, optional) - Additional note for the order.

### Create Order Profile [POST]

+ Request (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + table_id: `1` (required, number) - The table ID.
        + payment_id: `1` (required, number) - The payment ID.
        + user_id: `1` (required, number) - The user ID.
        + current_status: `ready` (string, optional) - The status of the order.
        + total_price: `100` (number, optional) - The price of the order.
        + pickup_type: `1` (number, optional) - `1` for self-pickup, `0` for table service.
        + note: `less salt` (string, optional) - Additional note for the order.

+ Response 200 (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + table_id: `1` (required, number) - The table ID.
        + payment_id: `1` (required, number) - The payment ID.
        + user_id: `1` (required, number) - The user ID.
        + current_status: `ready` (string, optional) - The status of the order.
        + total_price: `100` (number, optional) - The price of the order.
        + pickup_type: `1` (number, optional) - `1` for self-pickup, `0` for table service.
        + note: `less salt` (string, optional) - Additional note for the order.

### Update Order Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + table_id: `1` (required, number) - The table ID.
        + payment_id: `1` (required, number) - The payment ID.
        + user_id: `1` (required, number) - The user ID.
        + current_status: `ready` (string, optional) - The status of the order.
        + total_price: `100` (number, optional) - The price of the order.
        + pickup_type: `1` (number, optional) - `1` for self-pickup, `0` for table service.
        + note: `less salt` (string, optional) - Additional note for the order.

+ Response 200 (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + table_id: `1` (required, number) - The table ID.
        + payment_id: `1` (required, number) - The payment ID.
        + user_id: `1` (required, number) - The user ID.
        + current_status: `ready` (string, optional) - The status of the order.
        + total_price: `100` (number, optional) - The price of the order.
        + pickup_type: `1` (number, optional) - `1` for self-pickup, `0` for table service.
        + note: `less salt` (string, optional) - Additional note for the order.

## Table Profile [/table/{id}/profile]
+ Parameters
    + id: `1` (required, number) - An identifier for the table.

### Get Table Profile [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + qr_code: `QRCode.png` (required, string) - The QR code of the table.
        + table_no: `1` (required, number) - The table number.
        + description: `example` (string, optional) - The table description.

### Create Table Profile [POST]

+ Request (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + table_no: `1` (required, number) - The table number.
        + description: `example` (string, optional) - The table description.

+ Response 200 (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + table_no: `1` (required, number) - The table number.
        + qr_code_id: `1` (required, number) - The QR code ID.
        + description: `example` (string, optional) - The table description.

### Update Table Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + qr_code: `QRCode.png` (required, string) - The QR code of the table.
        + table_no: `1` (required, number) - The table number.
        + description: `example` (string, optional) - The table description.

+ Response 200 (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + qr_code: `QRCode.png` (required, string) - The QR code of the table.
        + table_no: `1` (required, number) - The table number.
        + description: `example` (string, optional) - The table description.

## Cart Profile [/cart/{id}/profile]
+ Parameters 
    + id: `1` (required, number) - An identifier for the cart.

### Get Cart Profile [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + user_id: `1` (required, number) - The user ID.
        + status: `pending` (required, string) - The cart status.
        + pickup_type: `1` (required, number) - `1` for self-pickup, `0` for table service.
        + selected_payment_method: `card` (required, string) - The payment method of the cart.
        + total_price: `100` (required, number) - The total price of the cart.
        + total_item: `10` (required, number) - The total item in the cart.
        + note: `example` (string, optional) - The note for the cart.

### Create Cart Profile [POST]

+ Request (application/json)
    + Attributes (object)
        + user_id: `1` (required, number) - The user ID.
        + status: `pending` (required, string) - The cart status.
        + pickup_type: `1` (required, number) - `1` for self-pickup, `0` for table service.
        + selected_payment_method: `card` (required, string) - The payment method of the cart.
        + total_price: `100` (required, number) - The total price of the cart.
        + total_item: `10` (required, number) - The total item in the cart.
        + note: `example` (string, optional) - The note for the cart.

+ Response 200 (application/json)
    + Attributes (object)
        + user_id: `1` (required, number) - The user ID.
        + status: `pending` (required, string) - The cart status.
        + pickup_type: `1` (required, number) - `1` for self-pickup, `0` for table service.
        + selected_payment_method: `card` (required, string) - The payment method of the cart.
        + total_price: `100` (required, number) - The total price of the cart.
        + total_item: `10` (required, number) - The total item in the cart.
        + note: `example` (string, optional) - The note for the cart.

### Update Cart Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + user_id: `1` (required, number) - The user ID.
        + status: `pending` (required, string) - The cart status.
        + pickup_type: `1` (required, number) - `1` for self-pickup, `0` for table service.
        + selected_payment_method: `card` (required, string) - The payment method of the cart.
        + total_price: `100` (required, number) - The total price of the cart.
        + total_item: `10` (required, number) - The total item in the cart.
        + note: `example` (string, optional) - The note for the cart.

+ Response 200 (application/json)
    + Attributes (object)
        + user_id: `1` (required, number) - The user ID.
        + status: `pending` (required, string) - The cart status.
        + pickup_type: `1` (required, number) - `1` for self-pickup, `0` for table service.
        + selected_payment_method: `card` (required, string) - The payment method of the cart.
        + total_price: `100` (required, number) - The total price of the cart.
        + total_item: `10` (required, number) - The total item in the cart.
        + note: `example` (string, optional) - The note for the cart.

## Category Profile [/category/{id}/profile]
+ Parameters 
    + id: `1` (required, number) - An identifier for the category.

### Get Category Profile [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + name: `main dish` (required, string) - The name of the category.
        + description: `example` (string, optional) - The category description.

### Create Category Profile [POST]

+ Request (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + name: `main dish` (required, string) - The name of the category.
        + description: `example` (string, optional) - The category description.

+ Response 200 (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + name: `main dish` (required, string) - The name of the category.
        + description: `example` (string, optional) - The category description.

### Update Category Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + name: `main dish` (required, string) - The name of the category.
        + description: `example` (string, optional) - The category description.

+ Response 200 (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + name: `main dish` (required, string) - The name of the category.
        + description: `example` (string, optional) - The category description.

## Cart Item Profile [/cart_item/{id}/profile]
+ Parameters 
    + id: `1` (required, number) - An identifier for the cart item.

### Get Cart Item Profile [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + cart_id: `1` (required, number) - The cart ID.
        + menu_item_id: `1` (required, number) - The menu item ID.
        + quantity: `3` (required, number) - The quantity of item.
        + note: `example` (string, optional) - The note for item.
        + price: `20` (required, number) - The item price.

### Create Cart Item Profile [POST]

+ Request (application/json)
    + Attributes (object)
        + cart_id: `1` (required, number) - The cart ID.
        + menu_item_id: `1` (required, number) - The menu item ID.
        + quantity: `3` (required, number) - The quantity of item.
        + note: `example` (string, optional) - The note for item.
        + price: `20` (required, number) - The item price.

+ Response 200 (application/json)
    + Attributes (object)
        + cart_id: `1` (required, number) - The cart ID.
        + menu_item_id: `1` (required, number) - The menu item ID.
        + quantity: `3` (required, number) - The quantity of item.
        + note: `example` (string, optional) - The note for item.
        + price: `20` (required, number) - The item price.

### Update Cart Item Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + cart_id: `1` (required, number) - The cart ID.
        + menu_item_id: `1` (required, number) - The menu item ID.
        + quantity: `3` (required, number) - The quantity of item.
        + note: `example` (string, optional) - The note for item.
        + price: `20` (required, number) - The item price.

+ Response 200 (application/json)
    + Attributes (object)
        + cart_id: `1` (required, number) - The cart ID.
        + menu_item_id: `1` (required, number) - The menu item ID.
        + quantity: `3` (required, number) - The quantity of item.
        + note: `example` (string, optional) - The note for item.
        + price: `20` (required, number) - The item price.

## Menu Item Profile [/menu_items/{id}/profile]
+ Parameters 
    + id: `1` (required, number) - An identifier for the menu item.

### Get Menu Item Profile [GET]
+ Response 200 (application/json)
    + Attributes (object)
        + category_id: `1` (required, number) - The category ID.
        + name: `dish 1` (required, string) - The name of the item.
        + description: `delicious` (string, optional) - The description of the item.
        + price: `50` (required, number) - The price of the item.
        + image: `example.png` (required, string) - The picture of the item.
        + is_best_seller: `1` (number, optional) - `1` for best-seller, `0` for not.
        + create_at: `2023-01-01T00:00:00.000Z` (required, string) - The date the item created.
        + update_at: `2023-01-01T00:00:00.000Z` (required, string) - The date the item updated.
        + status: `available` (required, string) - The status of the item.

### Create Menu Item Profile [POST]

+ Request (application/json)
    + Attributes (object)
        + category_id: `1` (required, number) - The category ID.
        + name: `dish 1` (required, string) - The name of the item.
        + description: `delicious` (string, optional) - The description of the item.
        + price: `50` (required, number) - The price of the item.
        + image: `example.png` (required, string) - The picture of the item.
        + is_best_seller: `1` (number, optional) - `1` for best-seller, `0` for not.
        + status: `available` (required, string) - The status of the item.

+ Response 200 (application/json)
    + Attributes (object)
        + category_id: `1` (required, number) - The category ID.
        + name: `dish 1` (required, string) - The name of the item.
        + description: `delicious` (string, optional) - The description of the item.
        + price: `50` (required, number) - The price of the item.
        + image: `example.png` (required, string) - The picture of the item.
        + is_best_seller: `1` (number, optional) - `1` for best-seller, `0` for not.
        + create_at: `2023-01-01T00:00:00.000Z` (required, string) - The date the item created.
        + update_at: `2023-01-01T00:00:00.000Z` (required, string) - The date the item updated.
        + status: `available` (required, string) - The status of the item.

### Update Menu Item Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + category_id: `1` (required, number) - The category ID.
        + name: `dish 1` (required, string) - The name of the item.
        + description: `delicious` (string, optional) - The description of the item.
        + price: `50` (required, number) - The price of the item.
        + image: `example.png` (required, string) - The picture of the item.
        + is_best_seller: `1` (number, optional) - `1` for best-seller, `0` for not.
        + status: `available` (required, string) - The status of the item.

+ Response 200 (application/json)
    + Attributes (object)
        + category_id: `1` (required, number) - The category ID.
        + name: `dish 1` (required, string) - The name of the item.
        + description: `delicious` (string, optional) - The description of the item.
        + price: `50` (required, number) - The price of the item.
        + image: `example.png` (required, string) - The picture of the item.
        + is_best_seller: `1` (number, optional) - `1` for best-seller, `0` for not.
        + create_at: `2023-01-01T00:00:00.000Z` (required, string) - The date the item created.
        + update_at: `2023-01-01T00:00:00.000Z` (required, string) - The date the item updated.
        + status: `available` (required, string) - The status of the item.

## Order Item Profile [/order_item/{id}/profile]
+ Parameters 
    + id: `1` (required, number) - An identifier for the order item.

### Get Order Item Profile [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + menu_items_id: `1` (required, number) - The menu item ID.
        + quantity: `5` (required, number) - The quantity of the item.
        + note: `less sour` (string, optional) - The note for the order item.
        + price: `123` (required, number) - The price of the item.

### Create Order Item Profile [POST]

+ Request (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + menu_items_id: `1` (required, number) - The menu item ID.
        + quantity: `5` (required, number) - The quantity of the item.
        + note: `less sour` (string, optional) - The note for the order item.
        + price: `123` (required, number) - The price of the item.

+ Response 200 (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + menu_items_id: `1` (required, number) - The menu item ID.
        + quantity: `5` (required, number) - The quantity of the item.
        + note: `less sour` (string, optional) - The note for the order item.
        + price: `123` (required, number) - The price of the item.

### Update Order Item Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + menu_items_id: `1` (required, number) - The menu item ID.
        + quantity: `5` (required, number) - The quantity of the item.
        + note: `less sour` (string, optional) - The note for the order item.
        + price: `123` (required, number) - The price of the item.

+ Response 200 (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + menu_items_id: `1` (required, number) - The menu item ID.
        + quantity: `5` (required, number) - The quantity of the item.
        + note: `less sour` (string, optional) - The note for the order item.
        + price: `123` (required, number) - The price of the item.

## Order Status Profile [/order_status/{id}/profile]
+ Parameters 
    + id: `1` (required, number) - An identifier for the order status.

### Get Order Status Profile [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + status: `ready` (required, string) - The status of the order.
        + timestamp: `2023-01-01T00:00:00.000Z` - The order timestamp.

### Create Order Status Profile [POST]

+ Request (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + status: `ready` (required, string) - The status of the order.

+ Response 200 (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + status: `ready` (required, string) - The status of the order.
        + timestamp: `2023-01-01T00:00:00.000Z` - The order timestamp.

### Update Order Status Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + status: `ready` (required, string) - The status of the order.

+ Response 200 (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + status: `ready` (required, string) - The status of the order.
        + timestamp: `2023-01-01T00:00:00.000Z` - The order timestamp.

## Payment Profile [/payment/{id}/profile]
+ Parameters 
    + id: `1` (required, number) - An identifier for the payment.

### Get Payment Profile [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + user_id: `1` (required, number) - The user ID.
        + payment_ref_is: `1` (required, number) - The payment reference.
        + payment_date: `2023-01-01T00:00:00.000Z` (required, string) - The date payment created.
        + payment_method: `cash` (required, string) - The payment method.
        + payment_status: `approved` (required, string) - The payment status.
        + payment_amount: `200` (required, number) - The total amount of payment.

### Create Payment Profile [POST]

+ Request (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + user_id: `1` (required, number) - The user ID.
        + payment_ref_is: `1` (required, number) - The payment reference.
        + payment_method: `cash` (required, string) - The payment method.
        + payment_status: `approved` (required, string) - The payment status.
        + payment_amount: `200` (required, number) - The total amount of payment.

+ Response 200 (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + user_id: `1` (required, number) - The user ID.
        + payment_ref_is: `1` (required, number) - The payment reference.
        + payment_date: `2023-01-01T00:00:00.000Z` (required, string) - The date payment created.
        + payment_method: `cash` (required, string) - The payment method.
        + payment_status: `approved` (required, string) - The payment status.
        + payment_amount: `200` (required, number) - The total amount of payment.

### Update Payment Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + user_id: `1` (required, number) - The user ID.
        + payment_ref_is: `1` (required, number) - The payment reference.
        + payment_method: `cash` (required, string) - The payment method.
        + payment_status: `approved` (required, string) - The payment status.
        + payment_amount: `200` (required, number) - The total amount of payment.

+ Response 200 (application/json)
    + Attributes (object)
        + order_id: `1` (required, number) - The order ID.
        + user_id: `1` (required, number) - The user ID.
        + payment_ref_is: `1` (required, number) - The payment reference.
        + payment_date: `2023-01-01T00:00:00.000Z` (required, string) - The date payment created.
        + payment_method: `cash` (required, string) - The payment method.
        + payment_status: `approved` (required, string) - The payment status.
        + payment_amount: `200` (required, number) - The total amount of payment.

## Payment Reference Profile [/payment_reference/{id}/profile]
+ Parameters 
    + id: `1` (required, number) - An identifier for the payment reference.

### Get Payment Reference Profile [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + cart_id: `1` (required, number) - The cart ID.
        + user_id: `1` (required, number) - The user ID.
        + payment_ref: `example` (required, string) - The payment reference.
        + create_at: `2023-01-01T00:00:00.000Z` (required, string) - The date payment reference created.
        + update_at: `2023-01-01T00:00:00.000Z` (required, string) - The date payment reference updated.
        + status: `approved` (required, string) - The payment reference status.

### Create Payment Reference Profile [POST]

+ Request (application/json)
    + Attributes (object)
        + cart_id: `1` (required, number) - The cart ID.
        + user_id: `1` (required, number) - The user ID.
        + payment_ref: `example` (required, string) - The payment reference.
        + status: `approved` (required, string) - The payment reference status.

+ Response 200 (application/json)
    + Attributes (object)
        + cart_id: `1` (required, number) - The cart ID.
        + user_id: `1` (required, number) - The user ID.
        + payment_ref: `example` (required, string) - The payment reference.
        + create_at: `2023-01-01T00:00:00.000Z` (required, string) - The date payment reference created.
        + update_at: `2023-01-01T00:00:00.000Z` (required, string) - The date payment reference updated.
        + status: `approved` (required, string) - The payment reference status.

### Update Payment Reference Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + cart_id: `1` (required, number) - The cart ID.
        + user_id: `1` (required, number) - The user ID.
        + payment_ref: `example` (required, string) - The payment reference.
        + status: `approved` (required, string) - The payment reference status.

+ Response 200 (application/json)
    + Attributes (object)
        + cart_id: `1` (required, number) - The cart ID.
        + user_id: `1` (required, number) - The user ID.
        + payment_ref: `example` (required, string) - The payment reference.
        + create_at: `2023-01-01T00:00:00.000Z` (required, string) - The date payment reference created.
        + update_at: `2023-01-01T00:00:00.000Z` (required, string) - The date payment reference updated.
        + status: `approved` (required, string) - The payment reference status.

## QR Code Profile [/qr_code/{id}/profile]
+ Parameters 
    + id: `1` (required, number) - An identifier for the QR code.

### Get QR Code Profile [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + table_id: `1` (required, string) - The table ID.
        + code_image: `example.png` (required, string) - The QR code image.
        
### Create QR Code Profile [POST]

+ Request (application/json)
    + Attributes (object)
        + table_id: `1` (required, string) - The table ID.

+ Response 200 (application/json)
    + Attributes (object)
        + table_id: `1` (required, string) - The table ID.
        + code_image: `example.png` (required, string) - The QR code image.

### Update QR Code Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + table_id: `1` (required, string) - The table ID.

+ Response 200 (application/json)
    + Attributes (object)
        + table_id: `1` (required, string) - The table ID.
        + code_image: `example.png` (required, string) - The QR code image.

## Restaurant Address Profile [/res_address/{id}/profile]
+ Parameters 
    + id: `1` (required, number) - An identifier for the restaurant address.

### Get Restaurant Address [GET]

+ Response 200 (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + number: `1` (required, number) - The number of the street.
        + street: `Example` (required, string) - The name of the street.
        + city: `HCMC` (required, string) - The name of the city.
        + ward: `Example` (string, optional) - The name of the ward.

### Create Restaurant Address [POST]

+ Request (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + number: `1` (required, number) - The number of the street.
        + street: `Example` (required, string) - The name of the street.
        + city: `HCMC` (required, string) - The name of the city.
        + ward: `Example` (string, optional) - The name of the ward.

+ Response 200 (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + number: `1` (required, number) - The number of the street.
        + street: `Example` (required, string) - The name of the street.
        + city: `HCMC` (required, string) - The name of the city.
        + ward: `Example` (string, optional) - The name of the ward.

### Update Restaurant Profile [PUT]

+ Request (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + number: `1` (required, number) - The number of the street.
        + street: `Example` (required, string) - The name of the street.
        + city: `HCMC` (required, string) - The name of the city.
        + ward: `Example` (string, optional) - The name of the ward.

+ Response 200 (application/json)
    + Attributes (object)
        + restaurant_id: `1` (required, number) - The restaurant ID.
        + number: `1` (required, number) - The number of the street.
        + street: `Example` (required, string) - The name of the street.
        + city: `HCMC` (required, string) - The name of the city.
        + ward: `Example` (string, optional) - The name of the ward.