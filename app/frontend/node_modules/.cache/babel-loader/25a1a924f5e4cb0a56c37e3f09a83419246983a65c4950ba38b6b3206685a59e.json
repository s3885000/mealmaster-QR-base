{"ast":null,"code":"var _jsxFileName = \"/Users/kevindang/Desktop/meal-master/src/screens/scanqr/ScanQR.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Buttons, Navigation } from '../../components';\nimport QrReader from 'react-qr-scanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanQR = () => {\n  _s();\n  const [result, setResult] = useState('No QR code scanned yet!');\n  const handleScan = data => {\n    if (data) {\n      setResult(data.text);\n      console.log(\"QR Code Scanned! \", data.text);\n      alert(\"QR Code Scanned! \" + data.text);\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-start h-screen px-5 pt-20 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between w-full mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(Buttons, {\n        context: \"back\",\n        className: \"mr-6\",\n        onClick: handleBackClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-black text-2xl\",\n        children: \"Scan QR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QrReader, {\n      delay: 300,\n      style: {\n        width: '100%'\n      },\n      onError: handleError,\n      onScan: handleScan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ScanQR, \"EAJJUg1HNUPVLyLiCfxpkgQCnSs=\");\n_c = ScanQR;\nexport default ScanQR;\nvar _c;\n$RefreshReg$(_c, \"ScanQR\");","map":{"version":3,"names":["React","useState","Buttons","Navigation","QrReader","jsxDEV","_jsxDEV","ScanQR","_s","result","setResult","handleScan","data","text","console","log","alert","handleError","err","error","className","children","context","onClick","handleBackClick","fileName","_jsxFileName","lineNumber","columnNumber","delay","style","width","onError","onScan","_c","$RefreshReg$"],"sources":["/Users/kevindang/Desktop/meal-master/src/screens/scanqr/ScanQR.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Buttons, Navigation } from '../../components';\nimport QrReader from 'react-qr-scanner';\n\nconst ScanQR = () => {\n  const [result, setResult] = useState('No QR code scanned yet!');\n\n  const handleScan = data => {\n    if (data) {\n      setResult(data.text);\n      console.log(\"QR Code Scanned! \", data.text);\n      alert(\"QR Code Scanned! \" + data.text);\n    }\n  }\n\n  const handleError = err => {\n    console.error(err);\n  }\n\n  return (\n    <div className='flex flex-col items-center justify-start h-screen px-5 pt-20 space-y-6'>\n      <div className='flex items-center justify-between w-full mb-5'>\n        <Buttons context='back' className='mr-6'onClick={handleBackClick} />\n        <h1 className='text-black text-2xl'>Scan QR</h1>\n      </div>\n      <QrReader\n        delay={300}\n        style={{ width: '100%' }}\n        onError={handleError}\n        onScan={handleScan}\n      />\n      <p>{result}</p>\n      <Navigation></Navigation>\n    </div>\n  );\n};\n\nexport default ScanQR;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,EAAEC,UAAU,QAAQ,kBAAkB;AACtD,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,yBAAyB,CAAC;EAE/D,MAAMU,UAAU,GAAGC,IAAI,IAAI;IACzB,IAAIA,IAAI,EAAE;MACRF,SAAS,CAACE,IAAI,CAACC,IAAI,CAAC;MACpBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAACC,IAAI,CAAC;MAC3CG,KAAK,CAAC,mBAAmB,GAAGJ,IAAI,CAACC,IAAI,CAAC;IACxC;EACF,CAAC;EAED,MAAMI,WAAW,GAAGC,GAAG,IAAI;IACzBJ,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC;EACpB,CAAC;EAED,oBACEZ,OAAA;IAAKc,SAAS,EAAC,wEAAwE;IAAAC,QAAA,gBACrFf,OAAA;MAAKc,SAAS,EAAC,+CAA+C;MAAAC,QAAA,gBAC5Df,OAAA,CAACJ,OAAO;QAACoB,OAAO,EAAC,MAAM;QAACF,SAAS,EAAC,MAAM;QAAAG,OAAO,EAAEC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpEtB,OAAA;QAAIc,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACNtB,OAAA,CAACF,QAAQ;MACPyB,KAAK,EAAE,GAAI;MACXC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO,CAAE;MACzBC,OAAO,EAAEf,WAAY;MACrBgB,MAAM,EAAEtB;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFtB,OAAA;MAAAe,QAAA,EAAIZ;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACftB,OAAA,CAACH,UAAU;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAACpB,EAAA,CA/BID,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}