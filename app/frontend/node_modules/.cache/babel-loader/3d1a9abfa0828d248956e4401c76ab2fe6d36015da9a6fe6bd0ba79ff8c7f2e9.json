{"ast":null,"code":"var _jsxFileName = \"/Users/kevindang/Desktop/meal-master/src/components/progress/Progress.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Stepper, Step, StepLabel, StepConnector } from '@material-ui/core';\nimport { Check as CheckIcon } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Confirmed', 'In Progress', 'Ready'];\nconst useStyles = makeStyles(theme => ({\n  stepper: {\n    backgroundColor: 'transparent'\n  },\n  completed: {\n    color: 'green'\n  },\n  active: {\n    color: 'blue'\n  },\n  icon: {\n    color: 'gray'\n  }\n}));\nconst Progress = _ref => {\n  _s();\n  let {\n    currentStep\n  } = _ref;\n  const classes = useStyles();\n  const activeStep = steps.indexOf(currentStep);\n  return /*#__PURE__*/_jsxDEV(Stepper, {\n    activeStep: activeStep,\n    alternativeLabel: true,\n    connector: /*#__PURE__*/_jsxDEV(StepConnector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 66\n    }, this),\n    children: steps.map((step, index) => {\n      const stepProps = {};\n      const labelProps = {};\n      if (index <= activeStep) {\n        labelProps.icon = /*#__PURE__*/_jsxDEV(CheckIcon, {\n          className: classes.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Step, {\n        ...stepProps,\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          ...labelProps,\n          children: step\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, step, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Progress, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","makeStyles","Stepper","Step","StepLabel","StepConnector","Check","CheckIcon","jsxDEV","_jsxDEV","steps","useStyles","theme","stepper","backgroundColor","completed","color","active","icon","Progress","_ref","_s","currentStep","classes","activeStep","indexOf","alternativeLabel","connector","fileName","_jsxFileName","lineNumber","columnNumber","children","map","step","index","stepProps","labelProps","className","_c","$RefreshReg$"],"sources":["/Users/kevindang/Desktop/meal-master/src/components/progress/Progress.jsx"],"sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Stepper, Step, StepLabel, StepConnector } from '@material-ui/core';\nimport { Check as CheckIcon } from '@material-ui/icons';\n\nconst steps = ['Confirmed', 'In Progress', 'Ready'];\n\nconst useStyles = makeStyles(theme => ({\n  stepper: {\n    backgroundColor: 'transparent',\n  },\n  completed: {\n    color: 'green',\n  },\n  active: {\n    color: 'blue',\n  },\n  icon: {\n    color: 'gray',\n  },\n}));\n\nconst Progress = ({ currentStep }) => {\n  const classes = useStyles();\n  const activeStep = steps.indexOf(currentStep);\n  \n  return (\n    <Stepper activeStep={activeStep} alternativeLabel connector={<StepConnector />}>\n      {steps.map((step, index) => {\n        const stepProps = {};\n        const labelProps = {};\n\n        if (index <= activeStep) {\n          labelProps.icon = <CheckIcon className={classes.completed} />;\n        }\n\n        return (\n          <Step key={step} {...stepProps}>\n            <StepLabel {...labelProps}>{step}</StepLabel>\n          </Step>\n        );\n      })}\n    </Stepper>\n  );\n};\n\nexport default Progress;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,OAAO,EAAEC,IAAI,EAAEC,SAAS,EAAEC,aAAa,QAAQ,mBAAmB;AAC3E,SAASC,KAAK,IAAIC,SAAS,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,KAAK,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,OAAO,CAAC;AAEnD,MAAMC,SAAS,GAAGV,UAAU,CAACW,KAAK,KAAK;EACrCC,OAAO,EAAE;IACPC,eAAe,EAAE;EACnB,CAAC;EACDC,SAAS,EAAE;IACTC,KAAK,EAAE;EACT,CAAC;EACDC,MAAM,EAAE;IACND,KAAK,EAAE;EACT,CAAC;EACDE,IAAI,EAAE;IACJF,KAAK,EAAE;EACT;AACF,CAAC,CAAC,CAAC;AAEH,MAAMG,QAAQ,GAAGC,IAAA,IAAqB;EAAAC,EAAA;EAAA,IAApB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EAC/B,MAAMG,OAAO,GAAGZ,SAAS,CAAC,CAAC;EAC3B,MAAMa,UAAU,GAAGd,KAAK,CAACe,OAAO,CAACH,WAAW,CAAC;EAE7C,oBACEb,OAAA,CAACP,OAAO;IAACsB,UAAU,EAAEA,UAAW;IAACE,gBAAgB;IAACC,SAAS,eAAElB,OAAA,CAACJ,aAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;IAAAC,QAAA,EAC5EtB,KAAK,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC1B,MAAMC,SAAS,GAAG,CAAC,CAAC;MACpB,MAAMC,UAAU,GAAG,CAAC,CAAC;MAErB,IAAIF,KAAK,IAAIX,UAAU,EAAE;QACvBa,UAAU,CAACnB,IAAI,gBAAGT,OAAA,CAACF,SAAS;UAAC+B,SAAS,EAAEf,OAAO,CAACR;QAAU;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC/D;MAEA,oBACEtB,OAAA,CAACN,IAAI;QAAA,GAAgBiC,SAAS;QAAAJ,QAAA,eAC5BvB,OAAA,CAACL,SAAS;UAAA,GAAKiC,UAAU;UAAAL,QAAA,EAAGE;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC,GADpCG,IAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET,CAAC;IAEX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd,CAAC;AAACV,EAAA,CAtBIF,QAAQ;EAAA,QACIR,SAAS;AAAA;AAAA4B,EAAA,GADrBpB,QAAQ;AAwBd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}