{"ast":null,"code":"var _jsxFileName = \"/Users/kevindang/Desktop/meal-master/src/components/progress/Progress.jsx\";\nimport React from 'react';\nimport { CheckIcon, InProgressIcon } from '../../asset/icons/box/index.js';\nimport \"./progress.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Confirmed', 'In Progress', 'Ready'];\nconst Progress = _ref => {\n  let {\n    currentStep\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex items-center space-x-4\",\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-bar ${currentStep >= 2 && \"half\"} ${currentStep >= 3 && \"full\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-container flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step ${currentStep > index ? 'bg-primary' : 'bg-gray'} flex items-center justify-center`,\n          children: currentStep > index ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n            className: \"text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(InProgressIcon, {\n            className: \"text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 75\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-center\",\n          children: step\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, step, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","CheckIcon","InProgressIcon","jsxDEV","_jsxDEV","steps","Progress","_ref","currentStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","step","index","_c","$RefreshReg$"],"sources":["/Users/kevindang/Desktop/meal-master/src/components/progress/Progress.jsx"],"sourcesContent":["import React from 'react';\nimport { CheckIcon, InProgressIcon } from '../../asset/icons/box/index.js';\nimport \"./progress.css\";\n\nconst steps = ['Confirmed', 'In Progress', 'Ready'];\n\nconst Progress = ({ currentStep }) => (\n  <div className=\"w-full h-full flex items-center justify-center\">  \n    <div className=\"w-full flex items-center space-x-4\">  {/* Modified here */}\n      <div className={`progress-bar ${currentStep >= 2 && \"half\"} ${currentStep >= 3 && \"full\"}`}></div>\n      {steps.map((step, index) => (\n        <div key={step} className=\"step-container flex flex-col items-center\">\n          <div className={`step ${currentStep > index ? 'bg-primary' : 'bg-gray'} flex items-center justify-center`}>\n            {currentStep > index ? <CheckIcon className='text-white' /> : <InProgressIcon className='text-white' />}\n          </div>\n          <p className=\"text-sm text-center\">{step}</p>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport default Progress;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,cAAc,QAAQ,gCAAgC;AAC1E,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,KAAK,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,OAAO,CAAC;AAEnD,MAAMC,QAAQ,GAAGC,IAAA;EAAA,IAAC;IAAEC;EAAY,CAAC,GAAAD,IAAA;EAAA,oBAC/BH,OAAA;IAAKK,SAAS,EAAC,gDAAgD;IAAAC,QAAA,eAC7DN,OAAA;MAAKK,SAAS,EAAC,oCAAoC;MAAAC,QAAA,GAAC,IAAE,eACpDN,OAAA;QAAKK,SAAS,EAAG,gBAAeD,WAAW,IAAI,CAAC,IAAI,MAAO,IAAGA,WAAW,IAAI,CAAC,IAAI,MAAO;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACjGT,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBb,OAAA;QAAgBK,SAAS,EAAC,2CAA2C;QAAAC,QAAA,gBACnEN,OAAA;UAAKK,SAAS,EAAG,QAAOD,WAAW,GAAGS,KAAK,GAAG,YAAY,GAAG,SAAU,mCAAmC;UAAAP,QAAA,EACvGF,WAAW,GAAGS,KAAK,gBAAGb,OAAA,CAACH,SAAS;YAACQ,SAAS,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGV,OAAA,CAACF,cAAc;YAACO,SAAS,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpG,CAAC,eACNV,OAAA;UAAGK,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EAAEM;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJrCE,IAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAAA,CACP;AAACI,EAAA,GAdIZ,QAAQ;AAgBd,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}